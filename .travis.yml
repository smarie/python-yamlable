language: python

cache: pip

matrix:
  fast_finish: true
  include:
#    - python: 2.6
    - python: 2.7
      env: PYYAML_VERSION=""
#    - python: 3.3
#    - python: 3.4
    - python: 3.5
      env: PYYAML_VERSION="<5"  # so that we have at least one with the old version
    - python: 3.6
      env: PYYAML_VERSION=""
    - python: 3.7
      env: PYYAML_VERSION=""
      dist: xenial
      sudo: true

env:
  global:
  - GH_REF: git@github.com:smarie/python-yamlable.git

before_install:
  # (a) linux dependencies
  - sudo apt-get install pandoc
  - sudo apt-get install ant
  - sudo apt-get install ant-optional

install:
  - pip list
  # needs to be installed beforehand
  - pip install setuptools_scm
  - python ci_tools/py_install.py pip ci_tools/requirements-pip.txt
  # travis-specific installs
  - pip install PyGithub  # for ci_tools/github_release.py
  - pip install codecov  # See https://github.com/codecov/example-python.
  - pip list

script:
#  - coverage run tests.py
  - pip install .
  - python -c "import os; os.chdir('..'); import yamlable"
# ***tests***
#  - coverage run tests.py
#  - pytest --junitxml=reports/junit/junit.xml --html=reports/junit/report.html --cov-report term-missing --cov=./yamlable -v yamlable/tests/
# now done in a dedicated script to capture exit code 1 and transform it to 0
  - chmod a+x ./ci_tools/run_tests.sh
  - sh ./ci_tools/run_tests.sh
  - python ci_tools/generate-junit-badge.py 100  # generates the badge for the test results and fail build if less than x%

after_success:
# ***reporting***
#  - junit2html junit.xml testrun.html  output is really not nice
  - ant -f ci_tools/generate-junit-html.xml  # generates the html for the test results. Actually we dont use it anymore
  - codecov
  #- pylint yamlable  # note that at the moment the report is simply lost, we dont transform the result into anything
# ***documentation***
  - mkdocs build -f docs/mkdocs.yml
  - mv reports/junit docs/  # not in site/ anymore so that we do not need to use --dirty (it breaks client-side search)
  # mkdocs gh-deploy requires special care :
  # ---grant the possibility to push on the repo---
  - openssl aes-256-cbc -K $encrypted_a3be41b6f539_key -iv $encrypted_a3be41b6f539_iv -in ci_tools/github_travis_rsa.enc -out ci_tools/github_travis_rsa -d
  # If the output file does not exist, that is because the secret is invalid. This can happen in forked repos so do not fail the build
  - |
    if [ -s "ci_tools/github_travis_rsa" ]; then
      chmod 600 ci_tools/github_travis_rsa
      eval `ssh-agent -s`  # launch the authentication agent
      ssh-add ci_tools/github_travis_rsa  # register the decrypted key
      git config user.name "Automatic Publish"
      git config user.email "sylvain.marie@schneider-electric.com"
      git remote add gh-remote "${GH_REF}";
      git fetch gh-remote && git fetch gh-remote gh-pages:gh-pages;  # make sure we have the latest gh-remote
      # push but only if this is not a build triggered by a pull request
      # note: do not use the --dirty flag as it breaks client-side search
      if [ "${TRAVIS_PULL_REQUEST}" = "false" ] && [ "${TRAVIS_PYTHON_VERSION}" = "3.5" ]; then echo "Pushing to github"; PYTHONPATH=yamlable/ mkdocs gh-deploy -v -f docs/mkdocs.yml --remote-name gh-remote; git push gh-remote gh-pages; fi;
    else
      echo "File 'ci_tools/github_travis_rsa' has not been created, please check your encrypted repo token in .travis.yml, on the line starting with 'openssl aes-256-cbc...'"
    fi

deploy:
  # Deploy on PyPI on tags
  - provider: pypi
    user: "smarie"
    password:
      secure: "TLBvYaFRplEFa8T0AW5b0LnRnz19/k/BEjtiiw4aWWrXTfNiWW1RRREG1iqqsqa6rkv547BVug2zj0SeeLvoncjGYclh92bmKMFhLVOlJtmYCIp8pNXT/3fEtrZosUN2OX4Z6qfOWnnefwjBB19rl18XPq/6zTyZ9dwKjkAfN+PPkHLqPtQ22+TcUe7f9jkDOs1pR0afacHz3HuBE5iaWbcDD2yCteJbfHwpFExfyO/X6LcjtQu63KH2NGvFP9qvwGrtnDIvmc1sWW9zi85H/j9T1TLQovJrY0oS8F+QOXbFlz/mOpORnh2sUj3f/nye0CvutnAqgS2OcRMqEAMIrdWzQOu8aBkKQuTOtiP+YKv7q7+GbWDIHJZK+whCWscS6XORVIaP5yGHc6SNZQqXarYskJFuRyJoClL51SxNsUzN4+yOLsdAqI/lvK2jIx4c2IztxuHEmbNwg1/R5/3YTk8g48U/nqOuIWBTNr0YwRRL/lBCxzGfHSjfcEnxzB0h/ORn0wBXig6tmNRyFAeA3qMHRekUgHjmzdZWw1yty3j1+sxdhOJXge+/AvqnNhSdY06w12WhEi4MV7p2pS5ZMX3Wnxvla/AzkCM4hrXxTYycAgFYjU2WkCCYqJwfV+Noa2hDbKPMHucoYBfB+qYNHUu0f+5uEGY3V5EhxZCmrGE="
    on:
      tags: true
      python: 3.5  #only one of the builds have to be deployed
    # server: https://test.pypi.org/legacy/
    distributions: "sdist bdist_wheel"

  # Create a github release on tags
  - provider: script
    script: python ci_tools/github_release.py -s $GITHUB_TOKEN --repo-slug smarie/python-yamlable -cf ./docs/changelog.md -d https://smarie.github.io/python-yamlable/changelog/ $TRAVIS_TAG
    skip_cleanup: true
    on:
      tags: true
      python: 3.5  #only one of the builds have to be deployed

notifications:
  email:
    on_success: never  # options: [always|never|change] default: always
